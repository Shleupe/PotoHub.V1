local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/bacon"))()
local version, changelog = lib:GetInfo()
local window = lib:CreateWindow("PotoHub".." BcnLib v"..version)
local label = lib:CreateLabel(window, "Main")

local toggledPath = false
local togglePath = lib:CreateToggle(window, "AutoShower", false, function(toggleState)
    toggledPath = not toggledPath
    local IsReached = false
    local inJob = false
    if toggledPath and inJob == false and IsReached == false then
        while inJob == false do
			warn("loopingHERE")
			local serv = game:GetService("PathfindingService")
			local human = game.Workspace.Live.LuffyMoki.Humanoid -- Change PlayerNameHere to your username.
			local body = game.Players.LocalPlayer.Character.Torso or game.Players.LocalPlayer.Character.HumanoidRootPart
			local dest = workspace.bord2.Part-- Change PartNameHere to the part.
			local path = serv:CreatePath()
			path:ComputeAsync(body.Position, dest.Position)
			if path.Status == Enum.PathStatus.Success then
				local wayPoints = path:GetWaypoints()
				for i = 1,#wayPoints do
					local point = wayPoints[i]
					human:MoveTo(point.Position)
					local success = human.MoveToFinished:Wait(3)
					IsReached = true
					warn(IsReached)
					if IsReached == true then
						local ClickDetectorRes = game.Workspace.bord2.BORD
						for i, v in pairs(ClickDetectorRes:GetChildren()) do
							if v:IsA'ClickDetector' then
								fireclickdetector(v)
								inJob = true
							end
						end
					end
					if point.Action == Enum.PathWaypointAction.Jump then
						human.WalkSpeed = 0
						wait(0.2)
						human.WalkSpeed = 16
						human.Jump = true
					end
					if not success then
						print("trying again")
						human.Jump = true
						human:MoveTo(point.Position)
						if not human.MoveToFinished:Wait() then
							break
						end
					end
				end
			end
			if inJob == true then
				if game.Players.LocalPlayer.PlayerGui.JobGui.Frame.Type.Text == "Delivery Job" then
					warn("here")
					local serv = game:GetService("PathfindingService")
					local human = game.Workspace.Live.LuffyMoki.Humanoid -- Change PlayerNameHere to your username.
					local body = game.Players.LocalPlayer.Character.Torso or game.Players.LocalPlayer.Character.HumanoidRootPart
					local dest = Vector3.new(191.016, 17.06, 1458.95)-- Change PartNameHere to the part.
					local path = serv:CreatePath()
					path:ComputeAsync(body.Position, dest)
					if path.Status == Enum.PathStatus.Success then
						local wayPoints = path:GetWaypoints()
						for i = 1,#wayPoints do
							local point = wayPoints[i]
							human:MoveTo(point.Position)
							local success = human.MoveToFinished:Wait(3)
							InJob = false
							IsReached = false
						end
					end
					if point.Action == Enum.PathWaypointAction.Jump then
						human.WalkSpeed = 0
						wait(0.2)
						human.WalkSpeed = 16
						human.Jump = true
					end
					if not success then
						print("trying again")
						human.Jump = true
						human:MoveTo(point.Position)
						if not human.MoveToFinished:Wait() then
							break
						end
					end
				end
			end
		end
    end
end)

local toggled = false
local toggle = lib:CreateToggle(window, "Auto Pushup", false, function(toggleState)
    toggled = not toggled
    if toggled then
        local tool = "Pushup"
        for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name == tool then
                v.Parent = game:GetService("Players").LocalPlayer.Character
                task.wait(1.25)
                mouse1click()
            end
        end
    end
    while toggled and game:GetService('RunService').Heartbeat:Wait() do
        wait(1.5)
        game:GetService("Players").LocalPlayer.PlayerGui.EventKey.LocalScript.RemoteEvent:FireServer()
    end
end)

local toggled2 = false
local toggle2 = lib:CreateToggle(window, "Auto Squat", false, function(toggleState)
    toggled2 = not toggled2
    if toggled2 then
        local tool = "Squat"
        for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name == tool then
                v.Parent = game:GetService("Players").LocalPlayer.Character
                task.wait(1.25)
                mouse1click()
            end
        end
    end
    while toggled2 and game:GetService('RunService').Heartbeat:Wait() do
        wait(1.5)
        game:GetService("Players").LocalPlayer.PlayerGui.EventKey.LocalScript.RemoteEvent:FireServer()
    end
end)

local toggled3 = false
local bought = false
local toggle3 = lib:CreateToggle(window, "Auto Res(Close)", false, function(toggleState)
    toggled3 = not toggled3
    while toggled3 do
        local ClickDetectorRes = game.Workspace.Shops.Workout["Res Training: 60"]
        for i, v in pairs(ClickDetectorRes:GetChildren()) do
            if v:IsA'ClickDetector' then
            fireclickdetector(v)
            bought = true
            
            task.delay(0.1, function()
                local tool = "Res Training"
                for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and v.Name == "Res Training" then
                    v.Parent = game:GetService("Players").LocalPlayer.Character
                    end
                end
            end)
            
            task.wait(12)
            bought = false
            end
        end
    end
end)

local toggle4 = lib:CreateToggle(window, "AutoClick(AutoRes)", false, function(toggleState)
    toggled4 = not toggled4
    while toggled4 do
        wait(0.25)
        mouse1click()
    end
end)

local toggled5 = false
local toggle5 = lib:CreateToggle(window, "AutoBuyRamen(Close)", false, function(toggleState)
    toggled5 = not toggled5
    
    while toggled5 do
        local ClickDetectorRes = game.Workspace.Shops.Ramen["Ramen Bowl: 50"]
        for i, v in pairs(ClickDetectorRes:GetChildren()) do
            if v:IsA'ClickDetector' then
                repeat 
                    fireclickdetector(v)
                    wait(0.25)
                until
                not toggled5
            end
        end
    end
end)

local drop = lib:CreateDropdown(window, "Dropdown")
lib:NewDropdownButton(window, drop, "Empty", function()
   print("LOL")
end)

lib:NewDropdownButton(window, drop, "Empty", function()
   print("YES")
end)

lib:NewDropdownButton(window, drop, "Empty", function()
   warn("XD")
end)
